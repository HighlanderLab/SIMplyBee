% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{calcColonyValue}
\alias{calcColonyValue}
\alias{calcColonyPheno}
\alias{calcColonyGv}
\alias{calcColonyBv}
\alias{calcColonyDd}
\alias{calcColonyAa}
\title{Calculate colony value(s)}
\usage{
calcColonyValue(x, FUN = NULL, simParamBee = NULL)

calcColonyPheno(x, FUN = calcColonyPhenoFromCaste, simParamBee = NULL, ...)

calcColonyGv(x, FUN = calcColonyGvFromCaste, simParamBee = NULL, ...)

calcColonyBv(x, FUN = calcColonyBvFromCaste, simParamBee = NULL, ...)

calcColonyDd(x, FUN = calcColonyDdFromCaste, simParamBee = NULL, ...)

calcColonyAa(x, FUN = calcColonyAaFromCaste, simParamBee = NULL, ...)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{MultiColony-class}}}

\item{FUN}{function, that calculates colony value from values of
colony members}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}

\item{...}{other arguments of \code{\link{FUN}}}
}
\value{
a row matrix of values when \code{x} is
  \code{\link{Colony-class}} and a row-named matrix when \code{x} is
  \code{\link{MultiColony-class}}, where names are colony IDs
}
\description{
Level 0 function that calculate value(s) of a colony.
}
\section{Functions}{
\itemize{
\item \code{calcColonyPheno()}: Calculate colony phenotype value from caste individuals' phenotype values

\item \code{calcColonyGv()}: Calculate colony genetic value from caste individuals' genetic values

\item \code{calcColonyBv()}: Calculate colony breeding value from caste individuals' breeding values

\item \code{calcColonyDd()}: Calculate colony dominance deviation from caste individuals' dominance deviations

\item \code{calcColonyAa()}: Calculate colony epistasis deviation from caste individuals' epistasis deviations

}}
\examples{
founderGenomes <- quickHaplo(nInd = 5, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)

# Define two traits that collectively affect colony honey yield:
# 1) queen's effect on colony honey yield, say via pheromone secretion phenotype
# 2) workers' effect on colony honey yield, say via foraging ability phenotype
# The traits will have a negative genetic correlation of -0.5 and heritability
# of 0.25 (on an individual level)
mean <- c(20, 0)
nWorkers <- 10
varA <- c(1, 1 / nWorkers)
corA <- matrix(data = c(
  1.0, -0.5,
  -0.5, 1.0
), nrow = 2, byrow = TRUE)
varE <- c(3, 3 / nWorkers)
varA / (varA + varE)
SP$addTraitADE(nQtlPerChr = 100,
               mean = mean,
               var = varA, corA = corA,
               meanDD = 0.1, varDD = 0.2, corD = corA,
               relAA = 0.1, corAA = corA)
SP$setVarE(varE = varE)

basePop <- createVirginQueens(founderGenomes)
drones <- createDrones(x = basePop[1], nInd = 1000)
droneGroups <- pullDroneGroupsFromDCA(drones, n = 10, nDrones = nFathersPoisson)

# Create and cross Colony and MultiColony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, drones = fatherGroups[[1]])
colony <- buildUp(colony, nWorkers = nWorkers, nDrones = 3)
apiary <- createMultiColony(basePop[3:5], n = 2)
apiary <- cross(apiary, drones = fatherGroups[c(2, 3)])
apiary <- buildUp(apiary, nWorkers = nWorkers, nDrones = 3)

# Colony value - shorthand version
# (using default calcColony*FromCaste() functions - you can provide yours instead!)
# ... phenotype value
calcColonyPheno(colony)
calcColonyPheno(apiary)
# ... genetic value
calcColonyGv(colony)
calcColonyGv(apiary)
# ... breeding value
# TODO: Uncomment getQueenBv() with nTrait>1 once AlphaSimR bug is solved
#   https://github.com/gaynorr/AlphaSimR/issues/83
#   https://github.com/HighlanderLab/SIMplyBee/issues/399
# calcColonyBv(colony)
# calcColonyBv(apiary)
# ... dominance deviation
# TODO: Uncomment getQueenBv() with nTrait>1 once AlphaSimR bug is solved
#   https://github.com/gaynorr/AlphaSimR/issues/83
#   https://github.com/HighlanderLab/SIMplyBee/issues/399
# calcColonyDd(colony)
# calcColonyDd(apiary)
# ... epistasis deviation
# TODO: Uncomment getQueenBv() with nTrait>1 once AlphaSimR bug is solved
#   https://github.com/gaynorr/AlphaSimR/issues/83
#   https://github.com/HighlanderLab/SIMplyBee/issues/399
# calcColonyAa(colony)
# calcColonyAa(apiary)

# Colony value - long version
# (using default calcColonyPhenoFromCaste() function - you can provide yours instead!)
calcColonyValue(colony, FUN = calcColonyPhenoFromCaste)
calcColonyValue(apiary, FUN = calcColonyPhenoFromCaste)

# Colony value - long version - using a function stored in SimParamBee (SP)
# (using default calcColonyPhenoFromCaste() function - you can provide yours instead!)
SP$calcColonyValue <- calcColonyPhenoFromCaste
calcColonyValue(colony)
calcColonyValue(apiary)

}
\seealso{
\code{\link{calcColonyValueFromCaste}} as an example of \code{FUN}
}
