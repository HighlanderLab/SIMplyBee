% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{calcBeeGRMIbs}
\alias{calcBeeGRMIbs}
\alias{calcBeeAlleleFreq}
\title{Calculate Genomic Relatedness Matrix (GRM) for honeybees from
  Identical By State genomic data}
\usage{
calcBeeGRMIbs(x, sex, alleleFreq = NULL)

calcBeeAlleleFreq(x, sex)
}
\arguments{
\item{x}{\code{\link{matrix}} of genotypes represented as allele dosage coded
as 0, 1, or 2 in females (queens or workers) and as 0 or 1 in males
(fathers or drones); individuals are in rows and sites are in columns; no
missing values are allowed (this is not checked - you will get NAs!)}

\item{sex}{character vector denoting sex for individuals with genotypes in
\code{x} - \code{"F"} for female and \code{"M"} for male}

\item{alleleFreq}{numeric, vector of allele frequencies for the sites in
\code{x}; if \code{NULL}, then \code{\link{calcBeeAlleleFreq}} is used}
}
\value{
matrix of genomic relatedness coefficients
}
\description{
Level 0 function that returns Genomic Relatedness Matrix (GRM)
  for honeybees from Identical By State genomic data (bi-allelic SNP
  represented as allele dosages) following the method for the sex X
  chromosome (Druet and Legarra, 2020)
}
\section{Functions}{
\itemize{
\item \code{calcBeeAlleleFreq}: Calculate allele frequencies from honeybee genotypes
}}

\examples{
founderGenomes <- quickHaplo(nInd = 2, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony <- createColony(x = basePop[2])
colony <- crossColony(colony, drones = drones[1:5], nFathers = 5)
colony <- addWorkers(colony, nInd = 5)
colony <- addDrones(colony, nInd = 5)
colony <- addVirginQueens(colony, nInd = 2)

genoQ <- getQueensSegSiteGeno(colony)
genoF <- getFathersSegSiteGeno(colony)
genoW <- getWorkersSegSiteGeno(colony)
genoD <- getDronesSegSiteGeno(colony)
genoV <- getVirginQueensSegSiteGeno(colony)
genoMeanW <- apply(X = genoW, MARGIN = 2, FUN = mean)
genoMeanD <- apply(X = genoD, MARGIN = 2, FUN = mean)

geno <- rbind(genoQ, genoF, genoW, genoD, genoV, genoMeanW, genoMeanD)
n <- length(rownames(geno))
rownames(geno)[c(n - 1, n)] <- c("mw", "md")

sex <- getCasteSex(x = colony)
sex <- c(
  sex$queen, sex$fathers, sex$workers, sex$drones, sex$virginQueens,
  "F", "M"
)

GRM <- calcBeeGRMIbs(x = geno, sex = sex)

# library("Matrix"); image(as(GRM, "Matrix"))

x <- diag(GRM)
hist(x)
summary(x)

x <- GRM[lower.tri(x = GRM, diag = FALSE)]
hist(x)
summary(x)

q <- rownames(genoQ)
f <- rownames(genoF)
w <- rownames(genoW)
d <- rownames(genoD)
v <- rownames(genoV)
mw <- "mw"
md <- "md"

# Queen vs others
GRM[q, f]
GRM[q, w]
GRM[q, d]
GRM[q, v]
GRM[q, mw]
GRM[q, md]

# Fathers vs others
GRM[f, f]
GRM[f, w]
GRM[f, d]
GRM[f, v]
GRM[f, mw]
GRM[f, md]

# Workers vs others
GRM[w, w]
GRM[w, d]
GRM[w, v]
GRM[w, mw]
GRM[w, md]

# Calculating allele frequencies ourselves (say, to "shift" base population)
aF <- calcBeeAlleleFreq(x = geno, sex = sex)
hist(aF)
GRM2 <- calcBeeGRMIbs(x = geno, sex = sex, alleleFreq = aF)
stopifnot(identical(GRM2, GRM))
}
\references{
Druet and Legarra (2020) Theoretical and empirical comparisons of
  expected and realized relationships for the X-chromosome. Genetics
  Selection Evolution, 52:50 \url{https://doi.org/10.1186/s12711-020-00570-6}
}
