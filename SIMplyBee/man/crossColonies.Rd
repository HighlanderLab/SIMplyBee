% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L3_Colonies.R
\name{crossColonies}
\alias{crossColonies}
\title{Cross colony for all given colonies}
\usage{
crossColonies(colonies, DCA, nFathers = NULL, simParamBee = NULL)
}
\arguments{
\item{colonies}{\code{\link{Colonies-class}}}

\item{DCA}{\code{\link{Pop-class}}, Drone Congregation Area;
\code{\link{isDrone}} test will be run on these to ensure these are drones}

\item{nFathers}{numeric or function, number of drones (fathers) to used in
matings (see \code{\link{crossColony}}); if \code{NULL} then
\code{simParamBee$nFathers} is used}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
\code{\link{Colonies-class}} with mated colonies
}
\description{
Level 3 function that does the same as \code{\link{crossColony}}
  but for all given colonies. To ease the use, \code{crossColonies} takes in
  a group of drones (Drone Congregation Area - DCA), partitions it so that
  each colony virgin queen mates with one group/partition of drones.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 30)
colony1 <- createColony(virginQueen = basePop[2])
colony2 <- createColony(virginQueen = basePop[3])
apiary <- c(colony1, colony2)
apiary
apiary[[1]]
apiary[[2]]

apiary <- crossColonies(colonies = apiary, DCA = drones, nFathers = 10)
apiary
apiary[[1]]
apiary[[2]]

}
