% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{pullCastePop}
\alias{pullCastePop}
\alias{pullQueen}
\alias{pullVirginQueens}
\alias{pullWorkers}
\alias{pullDrones}
\title{Pull individuals from a caste in a colony}
\usage{
pullCastePop(x, caste, nInd = NULL, use = "rand", removeFathers = TRUE)

pullQueen(x)

pullVirginQueens(x, nInd = NULL, use = "rand")

pullWorkers(x, nInd = NULL, use = "rand")

pullDrones(x, nInd = NULL, use = "rand", removeFathers = TRUE)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{MultiColony-class}}}

\item{caste}{character, "queen", "workers", "drones", or "virginQueens"}

\item{nInd}{numeric, number of individuals to pull, if \code{NULL} all
individuals are pulled}

\item{use}{character, all options provided by \code{\link{selectInd}}}

\item{removeFathers}{logical, removes \code{drones} that have already mated;
set to \code{FALSE} if you would like to get drones for mating with multiple
virgin queens, say via insemination}
}
\value{
list of \code{\link{Pop-class}} and \code{\link{Colony-class}}
  when \code{x} is \code{\link{Colony-class}} and list of (a list of
  \code{\link{Pop-class}} named by colony id) and
  \code{\link{MultiColony-class}} when \code{x} is
  \code{\link{MultiColony-class}}
}
\description{
Level 1 function that pulls individuals from a caste in a
  colony. These individuals are removed from the colony (compared to
  \code{\link{getCaste}}).
}
\section{Functions}{
\itemize{
\item \code{pullQueen()}: Pull queen from a colony

\item \code{pullVirginQueens()}: Pull virgin queens from a colony

\item \code{pullWorkers()}: Pull workers from a colony

\item \code{pullDrones()}: Pull drones from a colony

}}
\examples{
founderGenomes <- quickHaplo(nInd = 8, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$setTrackRec(TRUE)
SP$setTrackPed(isTrackPed = TRUE)
SP$addTraitA(10)
SP$addSnpChip(5)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 1000)
fatherGroups <- pullDroneGroupsFromDCA(drones, n = 10, nFathers = nFathersPoisson)

# Create a Colony and a MultiColony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = fatherGroups[[1]])
colony <- buildUp(x = colony, nWorkers = 100, nDrones = 10, exact = TRUE)
colony <- addVirginQueens(x = colony, nInd = 3)

apiary <- createMultiColony(basePop[3:4], n = 2)
apiary <- cross(apiary, fathers = fatherGroups[c(2, 3)])
apiary <- buildUp(x = apiary, nWorkers = 100, nDrones = 10, exact = TRUE)
apiary <- addVirginQueens(x = apiary, nInd = 3)

# pullCastePop on Colony class
# We can't pull the queen and leave the colony queenless
pullCastePop(colony, caste = "virginQueens")
pullCastePop(colony, caste = "virginQueens", nInd = 2)
pullVirginQueens(colony)
pullVirginQueens(colony, nInd = 2)

pullCastePop(colony, caste = "workers")
pullCastePop(colony, caste = "workers", nInd = 5)
pullWorkers(colony)
pullWorkers(colony, nInd = 5)

pullCastePop(colony, caste = "drones")
pullCastePop(colony, caste = "drones", nInd = 5)
pullDrones(colony)
pullDrones(colony, nInd = 5)

# pullCastePop on MultiColony class
pullCastePop(apiary, caste = "queen")
pullQueen(apiary)
nQueens(apiary)
nQueens(pullQueen(apiary)$colonies)

pullCastePop(apiary, caste = "virginQueens")
pullVirginQueens(apiary)
nVirginQueens(apiary)

pullCastePop(apiary, caste = "workers")
pullWorkers(apiary)
nWorkers(apiary)
nWorkers(pullWorkers(apiary)$colonies)

pullCastePop(apiary, caste = "drones")
pullDrones(apiary)
nDrones(apiary)
nDrones(pullDrones(apiary)$colonies)
}
\seealso{
\code{\link{pullQueen}}, \code{\link{pullVirginQueens}},
  \code{\link{pullWorkers}}, and \code{\link{pullDrones}}
}
