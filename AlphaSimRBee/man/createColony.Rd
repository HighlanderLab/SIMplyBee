% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{createColony}
\alias{createColony}
\title{Create a new Colony}
\usage{
createColony(
  id = NULL,
  location = NULL,
  queen = NULL,
  drones = NULL,
  workers = NULL,
  virgin_queens = NULL,
  fathers = NULL,
  pheno = NULL,
  swarm = FALSE,
  split = FALSE,
  supersedure = FALSE,
  collapse = FALSE,
  production = FALSE,
  last_event = NULL,
  yearOfBirth = NULL,
  misc = NULL,
  simParam = NULL
)
}
\arguments{
\item{id}{Character, the ID of the colony, which equals the ID of the queen of not stated otherwise.}

\item{location}{Numeric, location of the colony (x, y).}

\item{queen}{AlphaSimR population object to become the queen of the colony.}

\item{drones}{AlphaSimR population object to become the drones of the colony.}

\item{workers}{AlphaSimR population object to become the workers of the colony.}

\item{virgin_queens}{AlphaSimR individual or population object to become the virgin queen(s) of the colony.}

\item{pheno}{A matrix of the phenotypes of the colony}

\item{swarm}{Logical, whether the colony has swarmed}

\item{split}{Logical, whether the colony has split}

\item{supersedure}{Logical, whether the colony has superseded}

\item{collapse}{Logical, whether the colony has collapsed}

\item{production}{Logical, whether the colony produces hive products}

\item{last_event}{Character, the last event of the colony #TODO: WE probably don't need this}

\item{misc}{A list, normally empty and exists solely as an open slot available for uses to store extra information about individuals.}
}
\value{
Returns an object of \code{\link{Colony}}

AlphaSim Colony object of class "Colony"
}
\description{
Creates a new \code{\link{Colony}}.
The function is intended for creating initial colonies from
'FOUNDERPOP' created by \code{\link{runMacs}}.
}
\examples{
# Create founder genomes
founderGenomes <- quickHaplo(nInd = 200, nChr = 1, segSites = 10)

# Set simulation parameters
SP <- SimParam$new(founderGenomes)

# Create a base population
basePop <- newPop(founderGenomes)

# Create two colonies
colony1 <- createColony(queen = basePop[1], fathers = basePop[2:15])
colony2 <- createColony(virgin_queens = basePop[16])

}
