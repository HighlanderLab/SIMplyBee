% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class-SimParamBee.R
\name{nWorkersPoisson}
\alias{nWorkersPoisson}
\alias{nWorkersTruncPoisson}
\alias{nWorkersPoissonQueenFecundity}
\alias{nWorkersTruncPoissonQueenFecundity}
\title{Sample a number of workers}
\usage{
nWorkersPoisson(colony, n = 1, average = 100)

nWorkersTruncPoisson(colony, n = 1, average = 100, lowerLimit = 0)

nWorkersPoissonQueenFecundity(colony, n = 1, queenFecundityTrait = 1)

nWorkersTruncPoissonQueenFecundity(
  colony,
  n = 1,
  queenFecundityTrait = 1,
  lowerLimit = 0
)
}
\arguments{
\item{colony}{\code{\link{Colony-class}}}

\item{n}{integer, number of samples}

\item{average}{numeric, average number of workers}

\item{lowerLimit}{numeric, returned numbers will be above this value}

\item{queenFecundityTrait}{numeric, trait that represents queen's fecundity
(defined in \code{\link{SimParamBee}} - see examples)}
}
\value{
numeric, number of workers
}
\description{
Sample a number of workers when \code{nWorkers = NULL}
  (see \code{\link{SimParamBee}$nWorkers}) - this is just an example and
  you will likely want to define your own sampling functions!
}
\details{
\code{nWorkersPoisson} samples from a Poisson distribution with a
  given average, which can return a value 0. \code{nDronesTruncPoisson}
  samples from a zero truncated Poisson distribution.
  \code{nWorkersPoissonQueenFecundity} samples from a
  Poisson distribution whose average is a function of queen's fecundity
  phenotype ((trait)). You need to set up the trait parameters (means and
  variances) via \code{\link{SimParamBee}} (see examples). Finally,
  \code{nWorkersTruncPoissonQueenFecundity} samples from from a zero truncated
  Poisson distribution whose average is a function of queen's fecundity.
}
\section{Functions}{
\itemize{
\item \code{nWorkersTruncPoisson}: Sample a non-zero number of workers

\item \code{nWorkersPoissonQueenFecundity}: Sample a number of workers based on
  queen's fecundity trait (defined in \code{\link{SimParamBee}}!)
# TODO: Is using Poisson on top of queen's fecundity phenotype adding too
#       much variation?
#       https://github.com/HighlanderLab/SIMplyBee/issues/243

\item \code{nWorkersTruncPoissonQueenFecundity}: Sample a number of workers based on
  queen's fecundity trait (defined in \code{\link{SimParamBee}}!)
# TODO: Is using Poisson on top of queen's fecundity phenotype adding too
#       much variation?
#       https://github.com/HighlanderLab/SIMplyBee/issues/243
}}

\examples{
nWorkersPoisson()
nWorkersPoisson()
n <- nWorkersPoisson(n = 1000)
hist(n, breaks = seq(from = min(n), to = max(n)), xlim = c(0, 200))
table(n)

# Example for nWorkersPoissonQueenFecundity()
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
average <- 100
h2 <- 0.1
SP$addTraitA(nQtlPerChr = 100, mean = average, var = average * h2)
SP$setVarE(varE = average * (1 - h2))
basePop <- createVirginQueens(founderGenomes)
drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(x = basePop[2])
colony2 <- createColony(x = basePop[3])
colony1 <- crossColony(colony1, drones = drones[1:5], nFathers = 5)
colony2 <- crossColony(colony2, drones = drones[6:10], nFathers = 5)
colony1@queen@pheno
colony2@queen@pheno
colony1 <- addWorkers(colony1, nInd = nWorkersPoissonQueenFecundity)
nWorkers(colony1)
colony2 <- addWorkers(colony2, nInd = nWorkersPoissonQueenFecundity)
nWorkers(colony2)

# Logic behind nWorkersPoissonQueenFecundity()
average <- 100
queenFecundity <- rnorm(n = 1000, mean = average, sd = sqrt(average))
hist(queenFecundity, breaks = seq(from = 0, to = 200), xlim = c(0, 200))
n <- rpois(n = length(queenFecundity), lambda = queenFecundity)
hist(n, breaks = seq(from = 0, to = 200), xlim = c(0, 200))
r <- range(c(n, queenFecundity))
plot(n ~ queenFecundity, xlim = r, ylim = r)
abline(v = average)
abline(h = average)
abline(a = 0, b = 1)
}
\seealso{
\code{\link{SimParamBee}} field \code{nWorkers}
}
