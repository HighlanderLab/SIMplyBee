% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{nCaste}
\alias{nCaste}
\title{Level 0 function that returns the number of individuals of a caste in a
  colony}
\usage{
nCaste(x, caste = "all")
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{caste}{character, "queen", "fathers", "virginQueens", "workers",
"drones", or "all"}
}
\value{
when \code{x} is \code{\link{Colony-class}} return is integer for
  \code{caste != "all"} or list for \code{caste == "all"} with nodes named
  by caste; when \code{x} is \code{\link{Colonies-class}} return is named
  integer for \code{caste != "all"} or named list of lists for
  \code{caste == "all"}
}
\description{
Returns the number of individuals of a caste in a colony
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- asVirginQueen(newPop(founderGenomes))

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
colony1 <- addWorkers(colony1, nInd = 100)
colony1 <- addDrones(colony1, nInd = 10)
colony1 <- addVirginQueens(colony1, nInd = 3)
colony2 <- addWorkers(colony2, nInd = 200)
nCaste(colony1, caste = "queen")
nCaste(colony1, caste = "fathers")
nCaste(colony1, caste = "virginQueens")
nCaste(colony1, caste = "workers")
nCaste(colony1, caste = "drones")
nCaste(colony1, caste = "all")

apiary <- c(colony1, colony2)
nCaste(apiary, caste = "queen")
nCaste(apiary, caste = "fathers")
nCaste(apiary, caste = "virginQueens")
nCaste(apiary, caste = "workers")
nCaste(apiary, caste = "drones")
nCaste(apiary, caste = "all")
}
\seealso{
\code{\link{nQueens}}, \code{\link{nFathers}},
  \code{\link{nVirginQueens}}, \code{\link{nWorkers}}, and
  \code{\link{nDrones}}
}
