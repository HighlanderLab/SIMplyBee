% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getCasteSnpGeno}
\alias{getCasteSnpGeno}
\alias{getQueensSnpGeno}
\alias{getFathersSnpGeno}
\alias{getVirginQueensSnpGeno}
\alias{getWorkersSnpGeno}
\alias{getDronesSnpGeno}
\title{Access SNP array genotypes of individuals in a caste}
\usage{
getCasteSnpGeno(
  x,
  caste,
  nInd = NULL,
  snpChip = 1,
  chr = NULL,
  simParamBee = NULL
)

getQueensSnpGeno(x, snpChip = 1, chr = NULL, simParamBee = NULL)

getFathersSnpGeno(x, nInd = NULL, snpChip = 1, chr = NULL, simParamBee = NULL)

getVirginQueensSnpGeno(
  x,
  nInd = NULL,
  snpChip = 1,
  chr = NULL,
  simParamBee = NULL
)

getWorkersSnpGeno(x, nInd = NULL, snpChip = 1, chr = NULL, simParamBee = NULL)

getDronesSnpGeno(x, nInd = NULL, snpChip = 1, chr = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{caste}{character, "queen", "fathers", "virginQueens", "workers", or
"drones"}

\item{nInd}{numeric, number of individuals to access, if \code{NULL} all
individuals are accessed, otherwise a random sample}

\item{snpChip}{numeric, indicates which SNP array genotypes to retrieve}

\item{chr}{numeric, chromosomes to retrieve, if \code{NULL}, all chromosome
are retrieved}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
matrix with genotypes when \code{x} is \code{\link{Colony-class}} and
  list of matrices with genotypes when \code{x} is
  \code{\link{Colonies-class}}, named by colony id when \code{x} is
  \code{\link{Colonies-class}}
}
\description{
Level 0 function that returns SNP array genotypes of individuals
  in a caste.
}
\section{Functions}{
\itemize{
\item \code{getQueensSnpGeno}: Access SNP array genotype data of the queen

\item \code{getFathersSnpGeno}: Access SNP array genotype data of fathers

\item \code{getVirginQueensSnpGeno}: Access SNP array genotype data of virgin queens

\item \code{getWorkersSnpGeno}: Access SNP array genotype data of workers

\item \code{getDronesSnpGeno}: Access SNP array genotype data of drones
}}

\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$addSnpChip(nSnpPerChr = 10)
basePop <- newPop(founderGenomes)

drones <- createFounderDrones(pop = basePop[1], nDronesPerQueen = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
colony1 <- addDrones(colony1, nInd = 2)
colony2 <- addDrones(colony2, nInd = 4)
colony1 <- addVirginQueens(colony1, nInd = 2)

getCasteSnpGeno(colony1, caste = "queen")
getQueensSnpGeno(colony1)

getCasteSnpGeno(colony1, caste = "fathers")
getCasteSnpGeno(colony1, caste = "fathers", nInd = 2)
getCasteSnpGeno(colony1, caste = "fathers", nInd = 2)
getFathersSnpGeno(colony1)
getFathersSnpGeno(colony1, nInd = 2)

getCasteSnpGeno(colony1, caste = "virginQueens")
getVirginQueensSnpGeno(colony1)

getCasteSnpGeno(colony1, caste = "workers")
getWorkersSnpGeno(colony1)

getCasteSnpGeno(colony1, caste = "drones")
getDronesSnpGeno(colony1)

apiary <- c(colony1, colony2)
getCasteSnpGeno(apiary, caste = "queen")
getQueensSnpGeno(apiary)

getCasteSnpGeno(apiary, caste = "fathers")
getCasteSnpGeno(apiary, caste = "fathers", nInd = 2)
getCasteSnpGeno(apiary, caste = "fathers", nInd = 2)
getFathersSnpGeno(apiary)
getFathersSnpGeno(apiary, nInd = 2)

getCasteSnpGeno(apiary, caste = "virginQueens")
getVirginQueensSnpGeno(apiary)

getCasteSnpGeno(apiary, caste = "workers")
getWorkersSnpGeno(apiary)

getCasteSnpGeno(apiary, caste = "drones")
getDronesSnpGeno(apiary)

}
\seealso{
\code{\link{getSnpGeno}} and \code{\link{pullSnpGeno}}
}
