% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{reQueenColony}
\alias{reQueenColony}
\title{Re-queen a colony}
\usage{
reQueenColony(colony, queen, removeVirginQueens = TRUE)
}
\arguments{
\item{colony}{\code{\link{Colony-class}}}

\item{queen}{\code{\link{Pop-class}} with one individual that will be the
queen of the colony; if she is not mated, she will be added as a virgin
queen that will have to be mated later; test will be run if the individual
\code{\link{isVirginQueen}} or \code{\link{isQueen}}}

\item{removeVirginQueens}{logical, remove existing virgin queens, default is
\code{\link{TRUE}} since bee-keepers tend to remove any virgin queen cells
to ensure the provided queen prevails (see details)}
}
\value{
\code{\link{Colony-class}} with a new queen (see details)
}
\description{
Level 2 function that re-queens a colony adds a mated or a
  virgin queen, removes the previous queen, and changes colony id to the new
  mated queen.
}
\details{
If the provided queen is mated, then she is saved in the queen slot
  of the colony. If she is not mated, then she is saved in the virgin queen
  slot (replacing any existing virgin queens) and once she is mated will be
  promoted to the queen of the colony.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony <- createColony(x = basePop[2])
colony <- crossColony(colony, drones = drones[1:5], nFathers = 5)
colony <- addVirginQueens(colony)
colony

virginQueen <- basePop[3]
reQueenColony(colony, queen = virginQueen)

matedQueen <- crossVirginQueen(pop = basePop[3], drones = drones[6:10], nFathers = 5)
reQueenColony(colony, queen = matedQueen)
}
