% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{buildUpColony}
\alias{buildUpColony}
\title{Build up colony by adding (raising) workers and drones}
\usage{
buildUpColony(
  colony,
  nWorkers,
  nDrones = nWorkers * 0.1,
  new = FALSE,
  simParamBee = NULL
)
}
\arguments{
\item{colony}{\code{\link{Colony-class}}}

\item{nWorkers}{integer, desired number of workers in the colony (currently
present workers are taken into account so only the difference is added)}

\item{nDrones}{integer, desired number of drones in the colony (currently
present drones are taken into account so only the difference is added)}

\item{new}{logical, should the workers and drones be added a fresh (ignoring
currently present workers and drones)}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
\code{\link{Colony-class}} with workers and drones added
}
\description{
Level 2 function that builds up colony by adding (raising)
  workers and drones, usually in spring or after events such as split or
  swarming.
}
\details{
This function turns production of the colony to \code{TRUE}.
}
\examples{
founderGenomes <- quickHaplo(nInd = 2, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- newPop(founderGenomes)

drones <- createFounderDrones(pop = basePop[1], nDronesPerQueen = 5)
colony <- createColony(queen = basePop[2], fathers = drones)
colony
isProductive(colony)

(colony <- buildUpColony(colony, nWorkers = 100))
isProductive(colony)

colony <- buildUpColony(colony, nWorkers = 100)
colony # we are already at the target
colony <- buildUpColony(colony, nWorkers = 150)
colony # increasing the target
colony <- buildUpColony(colony, nWorkers = 100)
colony # we are already at the target
colony <- buildUpColony(colony, nWorkers = 100, new = TRUE)
colony # adding completely new workers & drones

}
