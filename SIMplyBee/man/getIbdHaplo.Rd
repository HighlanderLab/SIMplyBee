% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getIbdHaplo}
\alias{getIbdHaplo}
\title{Access IBD haplotypes}
\usage{
getIbdHaplo(pop, chr = NULL, snpChip = NULL, simParam = NULL)
}
\arguments{
\item{pop}{\code{\link{Pop-class}}}

\item{chr}{numeric, chromosomes to retrieve, if \code{NULL}, all chromosome
are retrieved}

\item{snpChip}{integer, indicating which SNP array loci are to be retrieved,
if \code{NULL}, all sites are retrieved}

\item{simParam}{\code{\link{SimParam}}, global simulation parameters}
}
\value{
Matrix of haplotypes
}
\description{
Level 0 function that returns IBD (identity by descent)
  haplotypes.
}
\details{
This is an alias for the AlphaSimR function to distinguish between getting
  and pulling
}
\examples{
founderGenomes <- quickHaplo(nInd = 8, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$setTrackRec(TRUE)
SP$setTrackPed(isTrackPed = TRUE)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 1000)
fatherGroups <- pullDroneGroupsFromDCA(drones, n = 10, nFathers = nFathersPoisson)

# Create a Colony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = fatherGroups[[1]])
colony <- buildUp(x = colony, nWorkers = 6, nDrones = 3)

# Use getIbdHaplo on a Population
getIbdHaplo(getWorkers(colony))
getIbdHaplo(getQueen(colony))
getIbdHaplo(getDrones(colony))
}
\seealso{
\code{\link{pullIbdHaplo}}
}
