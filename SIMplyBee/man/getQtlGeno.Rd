% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getQtlGeno}
\alias{getQtlGeno}
\title{Access QTL genotypes}
\usage{
getQtlGeno(pop, trait = 1, chr = NULL, simParam = NULL)
}
\arguments{
\item{pop}{\code{\link{Pop-class}}}

\item{trait}{numeric, indicates which trait's QTL genotype to retrieve}

\item{chr}{numeric, chromosomes to retrieve, if \code{NULL}, all chromosome
are retrieved}

\item{simParam}{\code{\link{SimParam}}, global simulation parameters}
}
\value{
Matrix of genotypes
}
\description{
Level 0 function that returns QTL genotypes.
}
\details{
This is an alias for the AlphaSimR function to distinguish between getting
  and pulling
}
\examples{
founderGenomes <- quickHaplo(nInd = 8, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$addTraitA(nQtlPerChr = 10)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 1000)
fatherGroups <- pullDroneGroupsFromDCA(drones, n = 10, nFathers = nFathersPoisson)

# Create a Colony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = fatherGroups[[1]])
colony <- buildUp(x = colony, nWorkers = 6, nDrones = 3)

# Use getQtlGeno on a Population
getQtlGeno(getWorkers(colony))
getQtlGeno(getQueen(colony))
}
\seealso{
\code{\link{pullQtlGeno}}
}
