% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{split}
\alias{split}
\title{Split colony in two colonies}
\usage{
split(x, p = NULL, year = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{p}{numeric, proportion of workers that will go to the split colony; if
\code{NULL} then \code{\link{SimParamBee}$splitP} is used}

\item{year}{numeric, year of birth for virgin queens}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
list with two  \code{\link{Colony-class}} or \code{\link{Colonies-class}},
the \code{split} and the \code{remnant} (see the description what each colony holds!);
both outputs have the split even slot set do \code{TRUE}
}
\description{
Level 2 function that splits colony into two new colonies to
  prevent swarming (in managed situation). The remnant colony retains the
  queen and a proportion of the workers and all drones. The split colony gets
  the other part of the workers, which raise virgin queens, of which only one
  prevails. Location of the split is the same as for the remnant.
}
\examples{
founderGenomes <- quickHaplo(nInd = 10, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)
drones <- createDrones(basePop[1], n = 1000)
fatherGroups <- pullDroneGroupsFromDCA(drones, n = 10, nFathers = 10)

# Create Colony and MultiColony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = fatherGroups[[1]])
(colony <- buildUp(colony, nWorkers = 100))
apiary <- createColonies(basePop[3:8], n = 6)
apiary <- cross(apiary, fathers = fatherGroups[2:7])
apiary <- buildUp(apiary, nWorkers = 100)

# Split a colony
tmp <- split(colony)
tmp$split
tmp$remnant

# Split all colonies in the apiary with p = 0.5 (50\% of workers in each split)
tmp <- split(apiary, p = 0.5)
tmp$split[[1]]
tmp$remnant[[1]]

# Split only specific colonies in the apiary
tmp <- pullColonies(apiary, ID = c(4, 5))
# Split only the pulled colonies
(split(tmp$pulledColonies, p = 0.5))

}
