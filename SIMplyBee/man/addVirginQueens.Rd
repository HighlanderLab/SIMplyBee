% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{addVirginQueens}
\alias{addVirginQueens}
\title{Add (raise) virgin queens in the colony}
\usage{
addVirginQueens(x, nInd = NULL, new = FALSE, year = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{nInd}{numeric or function, number of virgin queens to add; if
\code{NULL} then \code{\link{SimParamBee}$nVirginQueens} is used}

\item{new}{logical, should the virgin queens be added a fresh (ignoring
currently present virgin queens in the colony)}

\item{year}{numeric, year of birth for virgin queens}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
\code{\link{Colony-class}} or \code{\link{Colonies-class}} with
  virgin queens added
}
\description{
Level 2 function that adds (raises) the specified number of
  virgin queens in the colony by crossing the current queen and the fathers.
}
\details{
\code{addVirginQueens} replaces any currently present virgin queens.
}
\examples{
founderGenomes <- quickHaplo(nInd = 5, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 100)
fatherGroups <- pullDroneGroupsFromDCA(drones, n = 5, nFathers = nFathersPoisson)

# Create and cross Colony and MultiColony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = fatherGroups[[1]])
apiary <- createColonies(basePop[4:5], n = 2)
apiary <- cross(apiary, fathers = fatherGroups[3:4])

# Add virgin queens
addVirginQueens(colony, nInd = 20)
nVirginQueens(addVirginQueens(apiary, nInd = 20))

# Using a default in SP$nVirginQueens
# (just to have some workers - change this to your needs!)
addVirginQueens(colony)
nVirginQueens(addVirginQueens(apiary))

# Specify own number
SP$nVirginQueens <- 15
addVirginQueens(colony)
nVirginQueens(addVirginQueens(apiary))
# nVirginQueens will NOT vary between function calls when a constant is used

# Specify a function that will give a number
addVirginQueens(colony, nInd = nVirginQueensPoisson)
nVirginQueens(addVirginQueens(apiary, nInd = nVirginQueensPoisson))
# nVirginQueens will vary between function calls when a function is used

# Store a function or a value in the SP object
SP$nVirginQueens <- nVirginQueensPoisson
addVirginQueens(colony)
nVirginQueens(addVirginQueens(apiary))
# nVirginQueens will vary between function calls when a function is used
}
