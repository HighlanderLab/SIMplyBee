% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{createDrones}
\alias{createDrones}
\title{Creates drones from the colony}
\usage{
createDrones(x, nInd = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{nInd}{numeric or function, number of drones; if \code{NULL} then
\code{simParamBee$nDrones} is used}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
when \code{x} is \code{\link{Colony-class}} return is a
  \code{\link{Pop-class}} with drones; when \code{x} is
  \code{\link{Colonies-class}} return is a list of \code{\link{Pop-class}}
  with drones named by colony ID
}
\description{
Level 1 function that creates the specified number of drones
  from the colony. Drones are haploid and created from the diploid genome of
  the queen with recombination. Queen ID is stored as the father and mother
  of drones.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- newPop(founderGenomes)

drones <- createFounderDrones(pop = basePop[1], nDronesPerQueen = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
apiary <- c(colony1, colony2)
createDrones(colony1, nInd = 10)
createDrones(apiary, nInd = 10)

# Using a default in SP$nDrones
# (just to have some virgin queens - change this to your needs!)
createDrones(colony1)
createDrones(apiary)

SP$nDrones <- 15
createDrones(colony1)
createDrones(apiary)

nDronesFun <- function(colony) { rpois(n = 1, lambda = 15) }
createDrones(colony1, nInd = nDronesFun)
createDrones(apiary, nInd = nDronesFun)

SP$nDrones <- nDronesFun
createDrones(colony1)
createDrones(apiary)

}
