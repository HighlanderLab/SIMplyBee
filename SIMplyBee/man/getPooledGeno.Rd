% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getPooledGeno}
\alias{getPooledGeno}
\title{Get a pooled genotype from true genotypes}
\usage{
getPooledGeno(x, type = NULL, sex = NULL)
}
\arguments{
\item{x}{matrix, true genotypes with individuals in rows and sites in columns}

\item{type}{character, "mean" for average genotype or "count" for the counts
of reference and alternative alleles}

\item{sex}{character, vector of "F" and "M" to denote the sex of individuals
in \code{x}}
}
\value{
a numeric vector with average allele dosage when \code{type = "mean"}
  and a two-row matrix with the counts of reference (1st row) and
  alternative (2nd row) alleles
}
\description{
Level 0 function that returns a pooled genotype from true
  genotypes to mimic genotyping of a pool of colony members.
}
\examples{
founderGenomes <- quickHaplo(nInd = 2, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony <- createColony(x = basePop[2])
colony <- crossColony(colony, drones = drones[1:5], nFathers = 5)
colony <- addWorkers(colony, nInd = 100)
colony <- addDrones(colony, nInd = 100)
colony <- addVirginQueens(colony, nInd = 2)

genoQ <- getQueensSegSiteGeno(colony)
genoF <- getFathersSegSiteGeno(colony)
genoW <- getWorkersSegSiteGeno(colony)
genoD <- getDronesSegSiteGeno(colony)
genoV <- getVirginQueensSegSiteGeno(colony)

# Pool of drones
sexD <- getCasteSex(colony, caste = "drones")
getPooledGeno(x = genoD, type = "count", sex = sexD)[, 1:10]
(poolD <- getPooledGeno(x = genoD, type = "mean", sex = sexD))[, 1:10]
# ... compare to queen's genotype
genoQ[, 1:10]
plot(y = poolD, x = genoQ, ylim = c(0, 2), xlim = c(0, 2),
     ylab = "Average allele dosage in drones",
     xlab = "Allele dosage in the queen")

# As an exercise you could repeat the above with different numbers of drones!

# Pool of workers
getPooledGeno(x = genoW, type = "count")[, 1:10]
(poolW <- getPooledGeno(x = genoW, type = "mean"))[, 1:10]
# ... compare to fathers' and queen's avearage genotype
sexF <- getCasteSex(colony, caste = "fathers")
sexQ <- rep(x = "F", times = nrow(genoF))
sexFQ <- c(sexF, sexQ)
genoFQ <- rbind(genoF, genoQ[rep(x = 1, times = nrow(genoF)), ])
(poolFQ <- getPooledGeno(x = genoFQ, type = "mean", sex = sexFQ))[, 1:10]
plot(y = poolW, x = poolFQ, ylim = c(0, 2), xlim = c(0, 2),
     ylab = "Average allele dosage in workers",
     xlab = "Average allele dosage in the queen and fathers")

# As an exercise you could repeat the above with different numbers of workers!

}
