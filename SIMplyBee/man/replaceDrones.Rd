% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{replaceDrones}
\alias{replaceDrones}
\title{Replace a proportion of drones with new ones}
\usage{
replaceDrones(x, p = 1, use = "rand")
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{p}{numeric, proportion of drones to be replaced with new ones}

\item{use}{character, all the options provided by \code{\link{selectInd}} -
guides selection of drones that stay when \code{p < 1}}
}
\value{
\code{\link{Colony-class}} or \code{\link{Colonies-class}} with
  replaced drones
}
\description{
Level 2 function that replaces a proportion of drones with new
  drones from the colony. Useful after events like season change, swarming,
  supersedure, etc. due to the short life span of the drones.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- asVirginQueen(newPop(founderGenomes))

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
apiary <- c(colony1, colony2)
colony1 <- addDrones(colony1, nInd = 20)
apiary <- addDrones(apiary, nInd = 20)

getDrones(colony1)@id
colony1 <- replaceDrones(colony1, p = 0.5)
getDrones(colony1)@id
colony1 <- replaceDrones(colony1, p = 1.5)
getDrones(colony1)@id

lapply(getDrones(apiary), FUN = function(x) x@id)
apiary <- replaceDrones(apiary, p = 0.5)
lapply(getDrones(apiary), FUN = function(x) x@id)
apiary <- replaceDrones(apiary, p = 1.5)
lapply(getDrones(apiary), FUN = function(x) x@id)

}
