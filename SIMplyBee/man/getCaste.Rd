% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{getCaste}
\alias{getCaste}
\title{Access individuals of a caste}
\usage{
getCaste(x, caste, nInd = NULL)
}
\arguments{
\item{x}{Colony or Colonies}

\item{caste}{character, "queen", "fathers", "virgin_queens", "workers", or "drones"}

\item{nInd}{numeric, number of individuals to access, if NULL all individuals
are accessed, otherwise a random sample}
}
\value{
When \code{x} is Colony then return is Pop, population object with individuals
When \code{x} is Colonies then return is a list of Pop, population objects with individuals
}
\description{
Access individuals of a caste
}
\examples{
# AlphaSimR
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 10)
SP <- SimParam$new(founderGenomes)
basePop <- newPop(founderGenomes)

# Honeybee
drones <- createFounderDrones(pop = basePop[1], nDronesPerQueen = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
getCaste(colony1, caste = "queen")
getCaste(colony1, caste = "fathers")
getCaste(colony1, caste = "fathers", nInd = 2)
getCaste(colony1, caste = "fathers", nInd = 2)@id
getCaste(colony1, caste = "fathers", nInd = 2)@id

apiary <- c(colony1, colony2)
getCaste(apiary, caste = "queen")
getCaste(apiary, caste = "queen")[[1]]@id
getCaste(apiary, caste = "queen")[[2]]@id

getWorkers(apiary, nInd = 10)
getWorkers(apiary, nInd = 10)[[1]]@id
getWorkers(apiary, nInd = 10)[[2]]@id

}
