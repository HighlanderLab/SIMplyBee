% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{addDrones}
\alias{addDrones}
\title{Add (raise) drones in the colony}
\usage{
addDrones(x, nInd = NULL, new = FALSE, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{nInd}{numeric or function, number of drones; if \code{NULL} then
\code{simParamBee$nDrones} is used}

\item{new}{logical, should the drones be added a fresh (ignoring currently
present drones)}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
\code{\link{Colony-class}} or \code{\link{Colonies-class}} with
  drones added
}
\description{
Level 2 function that adds (raises) the specified number of
  drones in the colony by crossing the current queen and the fathers. If
  there are already some drones present, new and present drones are combined.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- asVirginQueen(newPop(founderGenomes))

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
apiary <- c(colony1, colony2)
addDrones(colony1, nInd = 20)
nDrones(addDrones(apiary, nInd = 20))

# Using a default in SP$nWorkers
# (just to have some workers - change this to your needs!)
addDrones(colony1)
nDrones(addDrones(apiary))

SP$nDrones <- 15
addDrones(colony1)
nDrones(addDrones(apiary))

nDronesFun <- function(colony) { rpois(n = 1, lambda = 15) }
addDrones(colony1, nInd = nDronesFun)
nDrones(addDrones(apiary, nInd = nDronesFun))

SP$nDrones <- nDronesFun
addDrones(colony1)
nDrones(addDrones(apiary))

}
