% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{createDrones}
\alias{createDrones}
\title{Creates drones from the colony}
\usage{
createDrones(colony, nInd = NULL, simParamBee = NULL)
}
\arguments{
\item{colony}{\code{\link{Colony-class}}}

\item{nInd}{numeric or function, number of drones; if \code{NULL} then
\code{simParamBee$nDrones} is used}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
\code{\link{Pop-class}} with drones
}
\description{
Level 1 function that creates the specified number of drones
  from the colony. Currently this is done by creating doubled-haploids from a
  queen (generating recombinant gametes and doubling them).
  TODO The drones will eventually be made properly haploid!
       Follow https://github.com/HighlanderLab/SIMplyBee/issues/24
}
\examples{
founderGenomes <- quickHaplo(nInd = 2, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- newPop(founderGenomes)

drones <- createFounderDrones(pop = basePop[1], nDronesPerQueen = 5)
colony <- createColony(queen = basePop[2], fathers = drones)
createDrones(colony, nInd = 10)

# Using a default in SP$nDrones
# (just to have some drones - change this to your needs!)
createDrones(colony)
createDrones(colony)

SP$nDrones <- 15
createDrones(colony)
createDrones(colony)

nDronesFun <- function(colony) { rpois(n = 1, lambda = 15) }
createDrones(colony, nInd = nDronesFun)
createDrones(colony, nInd = nDronesFun)

SP$nDrones <- nDronesFun
createDrones(colony)
createDrones(colony)

}
