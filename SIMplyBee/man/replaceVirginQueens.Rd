% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{replaceVirginQueens}
\alias{replaceVirginQueens}
\title{Replace a proportion of virgin queens with new ones}
\usage{
replaceVirginQueens(x, p = 1, use = "rand", year = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{p}{numeric, proportion of virgin queens to be replaced with new ones}

\item{use}{character, all the options provided by \code{\link{selectInd}} -
guides selection of virgin queens that stay when \code{p < 1}}

\item{year}{numeric, year of birth for virgin queens}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
\code{\link{Colony-class}} or  or \code{\link{Colonies-class}} with
  replaced virgin queens
}
\description{
Level 2 function that replaces a proportion of virgin queens with new
  virgin queens from the colony. Useful after events like season change, swarming,
  supersedure, etc. due to the short life span of the virgin queens.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- asVirginQueen(newPop(founderGenomes))

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
apiary <- c(colony1, colony2)
colony1 <- addVirginQueens(colony1, nInd = 20)
apiary <- addVirginQueens(apiary, nInd = 20)

getVirginQueens(colony1)@id
colony1 <- replaceVirginQueens(colony1, p = 0.5)
getVirginQueens(colony1)@id
colony1 <- replaceVirginQueens(colony1, p = 1.5)
getVirginQueens(colony1)@id

lapply(getVirginQueens(apiary), FUN = function(x) x@id)
apiary <- replaceVirginQueens(apiary, p = 0.5)
lapply(getVirginQueens(apiary), FUN = function(x) x@id)
apiary <- replaceVirginQueens(apiary, p = 1.5)
lapply(getVirginQueens(apiary), FUN = function(x) x@id)

}
