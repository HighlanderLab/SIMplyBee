% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{buildUpColony}
\alias{buildUpColony}
\title{Build up colony by adding (raising) workers and drones}
\usage{
buildUpColony(
  colony,
  nWorkers = NULL,
  nDrones = NULL,
  new = FALSE,
  exact = FALSE,
  resetEvents = FALSE,
  simParamBee = NULL
)
}
\arguments{
\item{colony}{\code{\link{Colony-class}}}

\item{nWorkers}{numeric or function, number of worker; if \code{NULL} then
\code{simParamBee$nWorkers} is used (unless \code{new = TRUE}, currently
present workers are taken into account and only the missing difference is
added)}

\item{nDrones}{numeric or function, number of drones; if \code{NULL} then
\code{simParamBee$nDrones} is used (unless \code{new = TRUE}, currently
present drones are taken into account so only the missing difference is
added)}

\item{new}{logical, should the workers and drones be added a
fresh (ignoring currently present workers and drones)}

\item{exact}{logical, if the csd locus is turned on and exact is \code{TRUE},
create the exact specified number of only viable workers (heterozygous on
the csd locus)}

\item{resetEvents}{logical, call \code{\link{resetEvents}} as part of the
build up}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
\code{\link{Colony-class}} with workers and drones added
}
\description{
Level 2 function that builds up colony by adding (raising)
  workers and drones usually in spring or after events such as split or
  swarming.
}
\details{
This function turns production of the colony to \code{TRUE}.
}
\examples{
founderGenomes <- quickHaplo(nInd = 2, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- newPop(founderGenomes)

drones <- createDrones(x = basePop[1], nDronesPerQueen = 5)
colony <- createColony(queen = basePop[2], fathers = drones)
colony
isProductive(colony)

# Using defaults in SP
# (just to have some bees - change this to your needs!)
(colony <- buildUpColony(colony))
isProductive(colony)

colony <- buildUpColony(colony, nWorkers = 100)
colony # we are already at the target
colony <- buildUpColony(colony, nWorkers = 150)
colony # increasing the target
colony <- buildUpColony(colony, nWorkers = 100)
colony # we are already at the target
colony <- buildUpColony(colony, nWorkers = 100, new = TRUE)
colony # adding completely new workers & drones

# Using functions
nWorkersFun <- function(colony) { rpois(n = 1, lambda = 100) }
nDronesFun <- function(colony) { rpois(n = 1, lambda = 15) }
colony <- createColony(queen = basePop[2], fathers = drones)
buildUpColony(colony, nWorkers = nWorkersFun, nDrones = nDronesFun)
buildUpColony(colony, nWorkers = nWorkersFun, nDrones = nDronesFun)

# Using functions in simParamBee
SP$nWorkers <- nWorkersFun
SP$nDrones <- nDronesFun
colony <- createColony(queen = basePop[2], fathers = drones)
buildUpColony(colony)
buildUpColony(colony)

}
