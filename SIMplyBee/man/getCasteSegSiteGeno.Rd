% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getCasteSegSiteGeno}
\alias{getCasteSegSiteGeno}
\alias{getQueensSegSiteGeno}
\alias{getFathersSegSiteGeno}
\alias{getVirginQueensSegSiteGeno}
\alias{getWorkersSegSiteGeno}
\alias{getDronesSegSiteGeno}
\title{Access genotypes for all segregating sites of individuals in a
  caste}
\usage{
getCasteSegSiteGeno(x, caste, nInd = NULL, chr = NULL, simParamBee = NULL)

getQueensSegSiteGeno(x, chr = NULL, simParamBee = NULL)

getFathersSegSiteGeno(x, nInd = NULL, chr = NULL, simParamBee = NULL)

getVirginQueensSegSiteGeno(x, nInd = NULL, chr = NULL, simParamBee = NULL)

getWorkersSegSiteGeno(x, nInd = NULL, chr = NULL, simParamBee = NULL)

getDronesSegSiteGeno(x, nInd = NULL, chr = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{caste}{character, "queen", "fathers", "virginQueens", "workers", or
"drones"}

\item{nInd}{numeric, number of individuals to access, if \code{NULL} all
individuals are accessed, otherwise a random sample}

\item{chr}{numeric, chromosomes to retrieve, if \code{NULL}, all chromosome
are retrieved}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
matrix with genotypes when \code{x} is \code{\link{Colony-class}} and
  list of matrices with genotypes when \code{x} is
  \code{\link{Colonies-class}}, named by colony id when \code{x} is
  \code{\link{Colonies-class}}
}
\description{
Level 0 function that returns genotypes for all segregating
  sites of individuals in a caste.
}
\section{Functions}{
\itemize{
\item \code{getQueensSegSiteGeno}: Access genotype data for all segregating sites of the queen

\item \code{getFathersSegSiteGeno}: Access genotype data for all segregating sites of fathers

\item \code{getVirginQueensSegSiteGeno}: Access genotype data for all segregating sites of virgin queens

\item \code{getWorkersSegSiteGeno}: Access genotype data for all segregating sites of workers

\item \code{getDronesSegSiteGeno}: Access genotype data for all segregating sites of drones
}}

\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- asVirginQueen(newPop(founderGenomes))

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
colony1 <- addDrones(colony1, nInd = 2)
colony2 <- addDrones(colony2, nInd = 4)
colony1 <- addVirginQueens(colony1, nInd = 2)

getCasteSegSiteGeno(colony1, caste = "queen")
getQueensSegSiteGeno(colony1)

getCasteSegSiteGeno(colony1, caste = "fathers")
getCasteSegSiteGeno(colony1, caste = "fathers", nInd = 2)
getCasteSegSiteGeno(colony1, caste = "fathers", nInd = 2)
getFathersSegSiteGeno(colony1)
getFathersSegSiteGeno(colony1, nInd = 2)

getCasteSegSiteGeno(colony1, caste = "virginQueens")
getVirginQueensSegSiteGeno(colony1)

getCasteSegSiteGeno(colony1, caste = "workers")
getWorkersSegSiteGeno(colony1)

getCasteSegSiteGeno(colony1, caste = "drones")
getDronesSegSiteGeno(colony1)

apiary <- c(colony1, colony2)
getCasteSegSiteGeno(apiary, caste = "queen")
getQueensSegSiteGeno(apiary)

getCasteSegSiteGeno(apiary, caste = "fathers")
getCasteSegSiteGeno(apiary, caste = "fathers", nInd = 2)
getCasteSegSiteGeno(apiary, caste = "fathers", nInd = 2)
getFathersSegSiteGeno(apiary)
getFathersSegSiteGeno(apiary, nInd = 2)

getCasteSegSiteGeno(apiary, caste = "virginQueens")
getVirginQueensSegSiteGeno(apiary)

getCasteSegSiteGeno(apiary, caste = "workers")
getWorkersSegSiteGeno(apiary)

getCasteSegSiteGeno(apiary, caste = "drones")
getDronesSegSiteGeno(apiary)
}
\seealso{
\code{\link{getSegSiteGeno}} and \code{\link{pullSegSiteGeno}}
}
