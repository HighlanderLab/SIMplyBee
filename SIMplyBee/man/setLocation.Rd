% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L2_Colony.R
\name{setLocation}
\alias{setLocation}
\title{Set colony location}
\usage{
setLocation(x, location)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{location}{numeric or list, location to be set for the
\code{\link{Colony-class}} or for \code{\link{Colonies-class}}; when
numeric the same location will be set for all colonies; when list different
locations will be set for each colony - the list has to have the same
length at there are colonies in \code{x})}
}
\value{
\code{\link{Colony-class}} or \code{\link{Colonies-class}} with set
  location
}
\description{
Level 2 function that to set colony location to (x, y)
  coordinates.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- newPop(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
apiary <- c(colony1, colony2)

getLocation(colony1)
getLocation(colony2)
getLocation(apiary)

loc1 <- c(512, 722)
colony1 <- setLocation(colony1, location = loc1)
getLocation(colony1)

loc2 <- c(189, 357)
colony2 <- setLocation(colony2, location = loc2)
getLocation(colony2)

getLocation(c(colony1, colony2))

# Assuming one location (as in bringing colonies to one place!)
apiary <- setLocation(apiary, location = loc1)
getLocation(apiary)

# Assuming different locations (so tmp is not an apiary in one location!)
tmp <- setLocation(c(colony1, colony2), location = list(loc1, loc2))
getLocation(tmp)

}
