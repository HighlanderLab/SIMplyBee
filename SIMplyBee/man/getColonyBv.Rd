% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getColonyBv}
\alias{getColonyBv}
\title{Access breeding values of individuals in colony}
\usage{
getColonyBv(
  x,
  caste = c("queen", "fathers", "workers", "drones", "virginQueens"),
  nInd = NULL,
  simParamBee = NULL
)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{caste}{character, a combination of "queen", "fathers", "workers",
"drones", or "virginQueens"}

\item{nInd}{numeric, number of individuals to access, if \code{NULL} all
individuals are accessed, otherwise a random sample; can be a list to
access different number of different caste - when this is the case
\code{nInd} takes precedence over \code{caste} (see examples)}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
list of vector of breeding values when \code{x} is
  \code{\link{Colony-class}} (list nodes named by caste) and list of a list
  of vectors of breeding values when \code{x} is
  \code{\link{Colonies-class}}, outer list is named by colony id when
  \code{x} is \code{\link{Colonies-class}}
}
\description{
Level 0 function that returns breeding values of individuals in
  colony.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$addTraitAD(nQtlPerChr = 10, meanDD = 0.2, varDD = 0.1)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(x = basePop[2])
colony1 <- crossColony(colony1, drones = drones[1:5], nFathers = 5)
colony2 <- createColony(x = basePop[3])
colony2 <- crossColony(colony2, drones = drones[6:10], nFathers = 5)
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
colony1 <- addDrones(colony1, nInd = 2)

getColonyBv(colony1)
getColonyBv(colony1, caste = c("queen", "fathers"))
getColonyBv(colony1, nInd = 1)
getColonyBv(colony1, nInd = list("queen" = 1, "fathers" = 2, "virginQueens" = 1))

getColonyBv(colony2)

apiary <- c(colony1, colony2)
getColonyBv(apiary)
getColonyBv(apiary, caste = c("queen", "fathers"))
getColonyBv(apiary, nInd = 1)
getColonyBv(apiary, nInd = list("queen" = 1, "fathers" = 2, "virginQueens" = 1))
}
\seealso{
\code{\link{bv}}
}
