% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{isGenoHeterozygous}
\alias{isGenoHeterozygous}
\title{Test if a multilocus genotype is heterozygous}
\usage{
isGenoHeterozygous(x)
}
\arguments{
\item{x}{integer or matrix, output from \code{\link{getCsdGeno}}}
}
\value{
logical
}
\description{
Level 0 function that returns heterozygote status for a
  multilocus genotype.
}
\examples{
founderGenomes <- quickHaplo(nInd = 8, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 1000)
fatherGroups <- pullDroneGroupsFromDCA(drones, n = 10, nFathers = nFathersPoisson)

# Create a Colony and a MultiColony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = fatherGroups[[1]])
colony <- buildUp(x = colony)
colony <- addVirginQueens(x = colony, nInd = 4)

apiary <- createMultiColony(basePop[3:4], n = 2)
apiary <- cross(apiary, fathers = fatherGroups[c(2, 3)])
apiary <- buildUp(x = apiary)
apiary <- addVirginQueens(x = apiary, nInd = 5)

# Caste members taken from Colony class
(tmp <- getCsdGeno(getQueen(colony)))
SIMplyBee:::isGenoHeterozygous(tmp)

(tmp <- getCsdGeno(getVirginQueens(colony)))
SIMplyBee:::isGenoHeterozygous(tmp)

(tmp <- getCsdGeno(getWorkers(colony)))
SIMplyBee:::isGenoHeterozygous(tmp)

# Caste members taken from MultiColony class
(tmp <- getCsdGeno(getQueen(apiary[[1]])))
SIMplyBee:::isGenoHeterozygous(tmp)

(tmp <- getCsdGeno(getVirginQueens(apiary[[1]])))
SIMplyBee:::isGenoHeterozygous(tmp)

(tmp <- getCsdGeno(getWorkers(apiary[[1]])))
SIMplyBee:::isGenoHeterozygous(tmp)
# Not exporting this function, since its just a helper and quite specific for
#   our csd locus implementation
}
