% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{createDrones}
\alias{createDrones}
\title{Creates drones from the colony}
\usage{
createDrones(x, nInd = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Pop-class}}, \code{\link{Colony-class}}, or
\code{\link{Colonies-class}}; with \code{\link{Pop-class}}, its individuals
must be virgin queens or queens (see \code{\link{asVirginQueen}})}

\item{nInd}{numeric or function, number of drones; if \code{NULL} then
\code{simParamBee$nDrones} is used; when \code{x} is
\code{\link{Pop-class}} the \code{nInd} is applied to every individual in
the \code{x} (here population individuals serve as a queen, for example
to initiate population from founding queens; see details)}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
when \code{x} is \code{\link{Pop-class}} or
  \code{\link{Colony-class}} return is a
  \code{\link{Pop-class}} with drones; when \code{x} is
  \code{\link{Colonies-class}} return is a list of \code{\link{Pop-class}}
  with drones - list nodes are named by colony ID
}
\description{
Level 1 function that creates drones from a population, colony,
  or colonies. Drones are double haploid and created from the diploid genome
  of a queen with recombination. Queen ID is stored as the father and
  mother of drones.
}
\details{
When \code{x} is \code{\link{Pop-class}} this function creates
  \code{nInd} drones for each individual in \code{x}, which will amount to
  \code{nInd(x) * nInd} drones - this can be slow if either or both of
  \code{c(nInd(x), nInd)} is large; tune the numbers to your needs.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$setTrackPed(isTrackPed = TRUE)
SP$setTrackRec(isTrackRec = TRUE)
basePop <- asVirginQueen(newPop(founderGenomes))

drones <- createDrones(x = basePop[1], nInd = 10)
basePop[1]@id
drones@id
drones@sex
drones@misc
drones@mother
drones@father
SP$pedigree
SP$recHist

colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
apiary <- c(colony1, colony2)

(tmp <- createDrones(colony1, nInd = 10))
colony1@queen@id
tmp@id
tmp@sex
tmp@misc
tmp@mother
tmp@father
SP$pedigree
SP$recHist

createDrones(apiary, nInd = 10)

# Using a default in SP$nDrones
# (just to have some drones - change this to your needs!)
SP$nDrones
createDrones(colony1)
createDrones(apiary)

SP$nDrones <- 15
createDrones(colony1)
createDrones(apiary)

nDronesFun <- function(colony) { rpois(n = 1, lambda = 15) }
createDrones(colony1, nInd = nDronesFun)
createDrones(apiary, nInd = nDronesFun)

SP$nDrones <- nDronesFun
createDrones(colony1)
createDrones(apiary)

}
