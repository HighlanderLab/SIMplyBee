% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{pullCaste}
\alias{pullCaste}
\title{Pull individuals from a caste in a colony}
\usage{
pullCaste(x, caste, nInd = NULL)
}
\arguments{
\item{x}{Colony or Colonies}

\item{caste}{character, "queen", virgin_queens", "workers", or "drones"}

\item{nInd}{numeric, number of individuals to pull, if NULL all individuals
are pulled, otherwise a random sample}
}
\value{
When \code{x} is Colony then return is a list with a population object (Pop) with pulled individuals and remaining colony
When \code{x} is Colonies then return is a list with a list of population object (Pop) with pulled individuals and remaining colonies
}
\description{
Pull individuals from a caste in a colony
}
\examples{
# AlphaSimR
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 10)
SP <- SimParam$new(founderGenomes)
basePop <- newPop(founderGenomes)

# Honeybee
drones <- createFounderDrones(pop = basePop[1], nDronesPerQueen = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
colony2 <- addDrones(colony2, nInd = 5)
pullCaste(colony1, caste = "queen")
pullCaste(colony1, caste = "virgin_queens")
pullCaste(colony1, caste = "workers")
pullCaste(colony1, caste = "workers", nInd = 5)
pullCaste(colony1, caste = "drones")
pullCaste(colony2, caste = "drones")

apiary <- c(colony1, colony2)
pullCaste(apiary, caste = "queen")
pullCaste(apiary, caste = "virgin_queens")
pullCaste(apiary, caste = "workers")
nWorkers(pullCaste(apiary, caste = "workers")$colonies)
nWorkers(pullCaste(apiary, caste = "workers", nInd = 5)$colonies)
pullCaste(apiary, caste = "drones")
nDrones(pullCaste(apiary, caste = "drones")$colonies)

}
