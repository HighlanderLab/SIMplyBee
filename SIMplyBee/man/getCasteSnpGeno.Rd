% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getCasteSnpGeno}
\alias{getCasteSnpGeno}
\alias{getQueenSnpGeno}
\alias{getFathersSnpGeno}
\alias{getVirginQueensSnpGeno}
\alias{getWorkersSnpGeno}
\alias{getDronesSnpGeno}
\title{Access SNP array genotypes of individuals in a caste}
\usage{
getCasteSnpGeno(
  x,
  caste,
  nInd = NULL,
  snpChip = 1,
  chr = NULL,
  dronesHaploid = TRUE,
  simParamBee = NULL
)

getQueenSnpGeno(x, snpChip = 1, chr = NULL, simParamBee = NULL)

getFathersSnpGeno(
  x,
  nInd = NULL,
  snpChip = 1,
  chr = NULL,
  dronesHaploid = TRUE,
  simParamBee = NULL
)

getVirginQueensSnpGeno(
  x,
  nInd = NULL,
  snpChip = 1,
  chr = NULL,
  simParamBee = NULL
)

getWorkersSnpGeno(x, nInd = NULL, snpChip = 1, chr = NULL, simParamBee = NULL)

getDronesSnpGeno(
  x,
  nInd = NULL,
  snpChip = 1,
  chr = NULL,
  dronesHaploid = TRUE,
  simParamBee = NULL
)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{MultiColony-class}}}

\item{caste}{character, "queen", "fathers", "workers", "drones", or
"virginQueens"}

\item{nInd}{numeric, number of individuals to access, if \code{NULL} all
individuals are accessed, otherwise a random sample}

\item{snpChip}{numeric, indicates which SNP array genotypes to retrieve}

\item{chr}{numeric, chromosomes to retrieve, if \code{NULL}, all chromosome
are retrieved}

\item{dronesHaploid}{logical, return haploid result for drones?}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
matrix with genotypes when \code{x} is \code{\link{Colony-class}} and
  list of matrices with genotypes when \code{x} is
  \code{\link{MultiColony-class}}, named by colony id when \code{x} is
  \code{\link{MultiColony-class}}
}
\description{
Level 0 function that returns SNP array genotypes of individuals
  in a caste.
}
\section{Functions}{
\itemize{
\item \code{getQueenSnpGeno()}: Access SNP array genotype data of the queen

\item \code{getFathersSnpGeno()}: Access SNP array genotype data of fathers

\item \code{getVirginQueensSnpGeno()}: Access SNP array genotype data of virgin queens

\item \code{getWorkersSnpGeno()}: Access SNP array genotype data of workers

\item \code{getDronesSnpGeno()}: Access SNP array genotype data of drones

}}
\examples{
founderGenomes <- quickHaplo(nInd = 8, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$addTraitA(10)
SP$addSnpChip(5)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 1000)
fatherGroups <- pullDroneGroupsFromDCA(drones, n = 10, nFathers = nFathersPoisson)

# Create a Colony and a MultiColony class
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = fatherGroups[[1]])
colony <- buildUp(x = colony)
colony <- addVirginQueens(x = colony, nInd = 5)

apiary <- createMultiColony(basePop[3:4], n = 2)
apiary <- cross(apiary, fathers = fatherGroups[c(2, 3)])
apiary <- buildUp(x = apiary)
apiary <- addVirginQueens(x = apiary, nInd = 5)

getCasteSnpGeno(colony, caste = "queen")
getQueenSnpGeno(colony)

getCasteSnpGeno(colony, caste = "fathers")
getCasteSnpGeno(colony, caste = "fathers", nInd = 2)
getCasteSnpGeno(colony, caste = "fathers", nInd = 2)
getFathersSnpGeno(colony)
getFathersSnpGeno(colony, nInd = 2)

getCasteSnpGeno(colony, caste = "virginQueens")
getVirginQueensSnpGeno(colony)

getCasteSnpGeno(colony, caste = "workers")
getWorkersSnpGeno(colony)

getCasteSnpGeno(colony, caste = "drones")
getDronesSnpGeno(colony)

getCasteSnpGeno(apiary, caste = "queen")
getQueenSnpGeno(apiary)

getCasteSnpGeno(apiary, caste = "fathers")
getCasteSnpGeno(apiary, caste = "fathers", nInd = 2)
getCasteSnpGeno(apiary, caste = "fathers", nInd = 2)
getFathersSnpGeno(apiary)
getFathersSnpGeno(apiary, nInd = 2)

getCasteSnpGeno(apiary, caste = "virginQueens")
getVirginQueensSnpGeno(apiary)

getCasteSnpGeno(apiary, caste = "workers")
getWorkersSnpGeno(apiary)

getCasteSnpGeno(apiary, caste = "drones")
getDronesSnpGeno(apiary)
}
\seealso{
\code{\link{getSnpGeno}} and \code{\link{pullSnpGeno}}
}
