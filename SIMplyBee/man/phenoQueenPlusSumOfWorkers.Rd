% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class-SimParamBee.R
\name{phenoQueenPlusSumOfWorkers}
\alias{phenoQueenPlusSumOfWorkers}
\title{Sample colony phenotype}
\usage{
phenoQueenPlusSumOfWorkers(
  colony,
  queenTrait = 1,
  workersTrait = 2,
  checkProduction = TRUE
)
}
\arguments{
\item{colony}{\code{\link{Colony-class}}}

\item{queenTrait}{numeric, trait that represents queen's effect on the
phenotype (defined in \code{\link{SimParamBee}} - see examples); if
\code{NULL} then this effect is 0}

\item{workersTrait}{numeric, trait that represents workers's effect on the
phenotype (defined in \code{\link{SimParamBee}} - see examples); if
\code{NULL} then this effect is 0}

\item{checkProduction}{logical, does the phenotype depend on the production
status of colony; if yes and production is not \code{TRUE}, the result is
a 0}
}
\value{
numeric matrix with a single value
}
\description{
Sample colony phenotype - used when \code{colonyFUN = NULL} (see
  \code{\link{SimParamBee}$colonyPheno}).

  This is just an example. You can provide your own functions that satisfy
  your needs!
}
\examples{
founderGenomes <- quickHaplo(nInd = 2, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)

# Define two traits that collectively affect colony honey yield:
# 1) queen's effect on colony honey yield
# 2) workers' effect on colony honey yield
# The traits will have negative genetic correlation and heritability of 0.25
meanP <- c(20, 0)
nWorkers <- 10
varA <- c(1, 1 / nWorkers)
corA <- matrix(data = c(
  1.0, -0.5,
  -0.5, 1.0
), nrow = 2, byrow = TRUE)
varE <- c(3, 3 / 10)
varA / (varA + varE)
SP$addTraitA(nQtlPerChr = 100, mean = meanP, var = varA, corA = corA)
SP$setVarE(varE = varE)

basePop <- createVirginQueens(founderGenomes)
drones <- createDrones(x = basePop[1], nInd = 15)
colony <- createColony(x = basePop[2])
colony <- cross(colony, fathers = drones)
colony <- buildUp(colony, nWorkers = nWorkers)

# Set phenotypes for all colony individuals
colony <- setColonyPheno(colony)

# Queen's phenotype for both traits
pheno(getQueen(colony))
# TODO: use getQueensPheno(colony, caste = "queen")
#       https://github.com/HighlanderLab/SIMplyBee/issues/26

# Workers' phenotype for both traits
pheno(getWorkers(colony))
# TODO: use getWorkersPheno(colony, caste = "queen")
#       https://github.com/HighlanderLab/SIMplyBee/issues/26

# TODO: use getColonyPheno(colony) for all individuals
#       https://github.com/HighlanderLab/SIMplyBee/issues/26

# Set phenotypes for all colony individuals AND colony
colony <- setColonyPheno(colony,
  colonyFUN = phenoQueenPlusSumOfWorkers
)
pheno(colony)
# TODO: use getColonyPheno(colony) for all individuals and/or colony
#       https://github.com/HighlanderLab/SIMplyBee/issues/26
}
\seealso{
\code{\link{SimParamBee}} field \code{colonyPheno} and
  \code{\link{getEvents}}
}
