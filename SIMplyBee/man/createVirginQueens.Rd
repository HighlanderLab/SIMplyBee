% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{createVirginQueens}
\alias{createVirginQueens}
\title{Creates virgin queens from the colony}
\usage{
createVirginQueens(x, nInd = NULL, year = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{nInd}{numeric or function, number of virgin queens; if \code{NULL} then
\code{simParamBee$nVirginQueens} is used}

\item{year}{numeric, year of birth for virgin queens}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
when \code{x} is \code{\link{Colony-class}} return is a list with two
  nodes named \code{virginQueens} (a \code{\link{Pop-class}}) and
  \code{pHomBrood} (a numeric); when \code{x} is \code{\link{Colonies-class}}
  return is a list of lists named by colony ID
}
\description{
Level 1 function that creates the specified number of virgin
  queens from the colony by mating the colony queen and the fathers. If csd
  locus is defined, it takes it into account and any csd homozygotes are
  removed and counted towards homozygous brood.
}
\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$setTrackPed(isTrackPed = TRUE)
SP$setTrackRec(isTrackRec = TRUE)
basePop <- newPop(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
apiary <- c(colony1, colony2)

(tmp <- createVirginQueens(colony1, nInd = 10))
colony1@queen@id
tmp$virginQueens@id
tmp$virginQueens@sex
tmp$virginQueens@misc
tmp$virginQueens@mother
tmp$virginQueens@father
SP$pedigree
SP$recHist

createVirginQueens(apiary, nInd = 10)

# Using a default in SP$nVirginQueens
# (just to have some virgin queens - change this to your needs!)
createVirginQueens(colony1)
createVirginQueens(apiary)

SP$nVirginQueens <- 15
createVirginQueens(colony1)
createVirginQueens(apiary)

nVirginQueensFun <- function(colony) { rpois(n = 1, lambda = 15) }
createVirginQueens(colony1, nInd = nVirginQueensFun)
createVirginQueens(apiary, nInd = nVirginQueensFun)

SP$nVirginQueens <- nVirginQueensFun
createVirginQueens(colony1)
createVirginQueens(apiary)

}
