% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L1_Pop.R
\name{pullCastePop}
\alias{pullCastePop}
\alias{pullQueen}
\alias{pullVirginQueens}
\alias{pullWorkers}
\alias{pullDrones}
\title{Pull individuals from a caste in a colony}
\usage{
pullCastePop(x, caste, nInd = NULL, use = "rand")

pullQueen(x)

pullVirginQueens(x, nInd = NULL, use = "rand")

pullWorkers(x, nInd = NULL, use = "rand")

pullDrones(x, nInd = NULL, use = "rand")
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{caste}{character, "queen", "workers", "drones", or "virginQueens"}

\item{nInd}{numeric, number of individuals to pull, if \code{NULL} all
individuals are pulled}

\item{use}{character, all options provided by \code{\link{selectInd}}}
}
\value{
list of \code{\link{Pop-class}} and \code{\link{Colony-class}}
  when \code{x} is \code{\link{Colony-class}} and list of (a list of
  \code{\link{Pop-class}} named by colony id) and
  \code{\link{Colonies-class}} when \code{x} is
  \code{\link{Colonies-class}}
}
\description{
Level 1 function that pulls individuals from a caste in a
  colony. These individuals are removed from the colony (compared to
  \code{\link{getCaste}}).
}
\section{Functions}{
\itemize{
\item \code{pullQueen}: Pull queen from a colony

\item \code{pullVirginQueens}: Pull virgin queens from a colony

\item \code{pullWorkers}: Pull workers from a colony

\item \code{pullDrones}: Pull drones from a colony
}}

\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(x = basePop[2])
colony1 <- crossColony(colony1, drones = drones[1:5], nFathers = 5)
colony2 <- createColony(x = basePop[3])
colony2 <- crossColony(colony2, drones = drones[6:10], nFathers = 5)
colony1 <- addVirginQueens(colony1, nInd = 10)
colony2 <- addVirginQueens(colony2, nInd = 5)
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
colony1 <- addDrones(colony1, nInd = 5)
colony2 <- addDrones(colony2, nInd = 6)
pullCastePop(colony1, caste = "queen")
pullQueen(colony1)

pullCastePop(colony1, caste = "virginQueens")
pullCastePop(colony1, caste = "virginQueens", nInd = 2)
pullVirginQueens(colony1)
pullVirginQueens(colony1, nInd = 2)

pullCastePop(colony1, caste = "workers")
pullCastePop(colony1, caste = "workers", nInd = 5)
pullWorkers(colony1)
pullWorkers(colony1, nInd = 5)

pullCastePop(colony1, caste = "drones")
pullCastePop(colony1, caste = "drones", nInd = 5)
pullDrones(colony1)
pullDrones(colony1, nInd = 5)

apiary <- c(colony1, colony2)

pullCastePop(apiary, caste = "queen")
pullQueen(apiary)
nQueens(apiary)
nQueens(pullQueen(apiary)$colonies)

pullCastePop(apiary, caste = "virginQueens")
pullVirginQueens(apiary)
nVirginQueens(apiary)
nVirginQueens(pullVirginQueens(apiary)$colonies)
nVirginQueens(pullVirginQueens(apiary, nInd = 5)$colonies)

pullCastePop(apiary, caste = "workers")
pullWorkers(apiary)
nWorkers(apiary)
nWorkers(pullWorkers(apiary)$colonies)
nWorkers(pullWorkers(apiary, nInd = 5)$colonies)

pullCastePop(apiary, caste = "drones")
pullDrones(apiary)
nDrones(apiary)
nDrones(pullDrones(apiary)$colonies)
nDrones(pullDrones(apiary, nInd = 5)$colonies)
}
\seealso{
\code{\link{pullQueen}}, \code{\link{pullVirginQueens}},
  \code{\link{pullWorkers}}, and \code{\link{pullDrones}}
}
