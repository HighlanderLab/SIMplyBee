% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getCasteBv}
\alias{getCasteBv}
\alias{getQueensBv}
\alias{getFathersBv}
\alias{getVirginQueensBv}
\alias{getWorkersBv}
\alias{getDronesBv}
\title{Access breeding values of individuals in a caste}
\usage{
getCasteBv(x, caste, nInd = NULL, simParamBee = NULL)

getQueensBv(x, simParamBee = NULL)

getFathersBv(x, nInd = NULL, simParamBee = NULL)

getVirginQueensBv(x, nInd = NULL, simParamBee = NULL)

getWorkersBv(x, nInd = NULL, simParamBee = NULL)

getDronesBv(x, nInd = NULL, simParamBee = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{caste}{character, "queen", "fathers", "virginQueens", "workers", or
"drones"}

\item{nInd}{numeric, number of individuals to access, if \code{NULL} all
individuals are accessed, otherwise a random sample}

\item{simParamBee}{\code{\link{SimParamBee}}, global simulation parameters}
}
\value{
vector of breeding values when \code{x} is \code{\link{Colony-class}}
  and list of vectors of breeding values when \code{x} is
  \code{\link{Colonies-class}}, named by colony id when \code{x} is
  \code{\link{Colonies-class}}
}
\description{
Level 0 function that returns breeding values of individuals in
  a caste.
}
\section{Functions}{
\itemize{
\item \code{getQueensBv}: Access breeding value of the queen

\item \code{getFathersBv}: Access breeding values of fathers

\item \code{getVirginQueensBv}: Access breeding values of virgin queens

\item \code{getWorkersBv}: Access breeding values of workers

\item \code{getDronesBv}: Access breeding values of drones
}}

\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$addTraitAD(nQtlPerChr = 10, meanDD = 0.2, varDD = 0.1)
basePop <- asVirginQueen(newPop(founderGenomes))

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
colony1 <- addDrones(colony1, nInd = 2)
colony2 <- addDrones(colony2, nInd = 4)
colony1 <- addVirginQueens(colony1, nInd = 2)

getCasteBv(colony1, caste = "queen")
getQueensBv(colony1)

getCasteBv(colony1, caste = "fathers")
getCasteBv(colony1, caste = "fathers", nInd = 2)
getCasteBv(colony1, caste = "fathers", nInd = 2)
getFathersBv(colony1)
getFathersBv(colony1, nInd = 2)

getCasteBv(colony1, caste = "virginQueens")
getVirginQueensBv(colony1)

getCasteBv(colony1, caste = "workers")
getWorkersBv(colony1)

getCasteBv(colony1, caste = "drones")
getDronesBv(colony1)

apiary <- c(colony1, colony2)
getCasteBv(apiary, caste = "queen")
getQueensBv(apiary)

getCasteBv(apiary, caste = "fathers")
getCasteBv(apiary, caste = "fathers", nInd = 2)
getCasteBv(apiary, caste = "fathers", nInd = 2)
getFathersBv(apiary)
getFathersBv(apiary, nInd = 2)

getCasteBv(apiary, caste = "virginQueens")
getVirginQueensBv(apiary)

getCasteBv(apiary, caste = "workers")
getWorkersBv(apiary)

getCasteBv(apiary, caste = "drones")
getDronesBv(apiary)
}
\seealso{
\code{\link{bv}}
}
