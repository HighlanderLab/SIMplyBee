% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class-SimParamBee.R
\name{nVirginQueensPoisson}
\alias{nVirginQueensPoisson}
\alias{nVirginQueensTruncPoisson}
\alias{nVirginQueensPoissonColonyStrength}
\alias{nVirginQueensTruncPoissonColonyStrength}
\title{Sample a number of virgin queens}
\usage{
nVirginQueensPoisson(colony, n = 1, average = 10)

nVirginQueensTruncPoisson(colony, n = 1, average = 10, lowerLimit = 0)

nVirginQueensPoissonColonyStrength(
  colony,
  n = 1,
  lower = 0,
  upper = 20,
  rate = 3,
  nWorkersFull = 100
)

nVirginQueensTruncPoissonColonyStrength(
  colony,
  n = 1,
  lower = 0,
  upper = 20,
  rate = 3,
  nWorkersFull = 100,
  lowerLimit = 0
)
}
\arguments{
\item{colony}{\code{\link{Colony-class}}}

\item{n}{integer, number of samples}

\item{average}{numeric, average number of virgin queens}

\item{lowerLimit}{numeric, returned numbers will be above this value}

\item{lower}{numeric, lower (left) asymptote with respect to colony strength
(see examples)}

\item{upper}{numeric, upper (right) asymptote with respect to colony strength
(see examples)}

\item{rate}{numeric, growth rate with respect to colony strength
(see examples)}

\item{nWorkersFull}{numeric, average number of workers in a full/strong colony}
}
\value{
numeric, number of virgin queens
}
\description{
Sample a number of virgin queens when \code{nFathers = NULL}
  (see \code{\link{SimParamBee}$nVirginQueens}) - this is just an example and
  you will likely want to define your own sampling functions!
}
\details{
\code{nVirginQueensPoisson} samples from a Poisson distribution,
  which can return a value 0 (that would mean a failed colony recover after a
  queen dies), while \code{nVirginQueensTruncPoisson} samples from a
  truncated Poisson distribution (truncated at zero) to avoid failure.

  The \code{nWorkersFull} default value used in this function is geared
  towards a situation where we simulate ~100 workers per colony (down-scaled
  simulation for efficiency). If you simulate more workers, you should change
  the default accordingly.
}
\section{Functions}{
\itemize{
\item \code{nVirginQueensTruncPoisson}: Sample a non-zero number of virgin queens

\item \code{nVirginQueensPoissonColonyStrength}: Sample a number of virgin queens based on
colony strength

\item \code{nVirginQueensTruncPoissonColonyStrength}: Sample a non-zero number of virgin queens
based on colony strength
}}

\examples{
nVirginQueensPoisson()
nVirginQueensPoisson()
n <- nVirginQueensPoisson(n = 1000)
hist(n, breaks = seq(from = min(n), to = max(n)), xlim = c(0, 30))
table(n)

nVirginQueensTruncPoisson()
nVirginQueensTruncPoisson()
n <- nVirginQueensTruncPoisson(n = 1000)
hist(n, breaks = seq(from = min(n), to = max(n)), xlim = c(0, 30))
table(n)

# Example for nVirginQueensPoissonColonyStrength()
founderGenomes <- quickHaplo(nInd = 2, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)
drones <- createDrones(x = basePop[1], nInd = 5)
colony <- createColony(x = basePop[2])
colony <- crossColony(colony, drones = drones, nFathers = 5)
colony <- addWorkers(colony, nInd = 10)
nWorkers(colony) # weak colony
nVirginQueensPoissonColonyStrength(colony)
nVirginQueensPoissonColonyStrength(colony)
colony <- addWorkers(colony, nInd = 100)
nWorkers(colony) # strong colony
nVirginQueensPoissonColonyStrength(colony)
nVirginQueensPoissonColonyStrength(colony)

# Logic behind nVirginQueensPoissonColonyStrength()
# Based https://en.wikipedia.org/wiki/Generalised_logistic_function
averageExp <- 10
lower <- 0
upper <- 20
rate <- 3
nWorkersFull <- 100
nW <- 0:400
x <- (nW - nWorkersFull) / nWorkersFull
average <- lower + ((upper - lower) / (1 + exp(-rate * x)))
n <- rpois(n = length(nW), lambda = average)
plot(n ~ nW)
abline(v = nWorkersFull)
abline(h = averageExp)
lines(average ~ nW)
}
\seealso{
\code{\link{SimParamBee}} field \code{nVirginQueens}
}
