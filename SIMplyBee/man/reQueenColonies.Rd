% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L3_Colonies.R
\name{reQueenColonies}
\alias{reQueenColonies}
\title{Re-queen a colony for all given colonies}
\usage{
reQueenColonies(colonies, queens)
}
\arguments{
\item{colonies}{\code{\link{Colonies-class}}}

\item{queens}{\code{\link{Pop-class}}, queens to be added to colonies, one
for each colony; \code{\link{isVirginQueen}} and \code{\link{isQueen}} test
will be run on to ensure these are proper queens}
}
\value{
\code{\link{Colonies-class}} with re-queened colonies
}
\description{
Level 3 function that does the same as
  \code{\link{reQueenColony}} but for all given colonies.
}
\examples{
founderGenomes <- quickHaplo(nInd = 5, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
basePop <- createVirginQueens(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 20)
drones <- createDrones(x = basePop[1:4], nInd = 10)
colony1 <- createColony(x = basePop[2])
colony1 <- crossColony(colony1, drones = drones[1:5], nFathers = 5)
colony2 <- createColony(x = basePop[3])
colony2 <- crossColony(colony2, drones = drones[6:10], nFathers = 5)
apiary <- c(colony1, colony2)
apiary
apiary[[1]]
apiary[[2]]

virginQueens <- basePop[4:5]
apiary2 <- reQueenColonies(apiary, queen = virginQueens)
apiary2
apiary2[[1]]
apiary2[[2]]

matedQueens <- crossVirginQueen(
  pop = basePop[4:5],
  drones = drones[11:20], nFathers = 2
)
apiary3 <- reQueenColonies(apiary, queen = matedQueens)
apiary3
apiary3[[1]]
apiary3[[2]]
}
