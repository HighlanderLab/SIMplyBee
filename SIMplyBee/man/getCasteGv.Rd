% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions_L0_auxilary.R
\name{getCasteGv}
\alias{getCasteGv}
\alias{getQueensGv}
\alias{getFathersGv}
\alias{getVirginQueensGv}
\alias{getWorkersGv}
\alias{getDronesGv}
\title{Access genetic values of individuals in a caste}
\usage{
getCasteGv(x, caste, nInd = NULL)

getQueensGv(x)

getFathersGv(x, nInd = NULL)

getVirginQueensGv(x, nInd = NULL)

getWorkersGv(x, nInd = NULL)

getDronesGv(x, nInd = NULL)
}
\arguments{
\item{x}{\code{\link{Colony-class}} or \code{\link{Colonies-class}}}

\item{caste}{character, "queen", "fathers", "virginQueens", "workers", or
"drones"}

\item{nInd}{numeric, number of individuals to access, if \code{NULL} all
individuals are accessed, otherwise a random sample}
}
\value{
vector of genetic values when \code{x} is \code{\link{Colony-class}}
  and list of vectors of genetic values when \code{x} is
  \code{\link{Colonies-class}}, named by colony id when \code{x} is
  \code{\link{Colonies-class}}
}
\description{
Level 0 function that returns genetic values of individuals in a
  caste.
}
\section{Functions}{
\itemize{
\item \code{getQueensGv}: Access genetic value of the queen

\item \code{getFathersGv}: Access genetic values of fathers

\item \code{getVirginQueensGv}: Access genetic values of virgin queens

\item \code{getWorkersGv}: Access genetic values of workers

\item \code{getDronesGv}: Access genetic values of drones
}}

\examples{
founderGenomes <- quickHaplo(nInd = 3, nChr = 1, segSites = 100)
SP <- SimParamBee$new(founderGenomes)
SP$addTraitAD(nQtlPerChr = 10, meanDD = 0.2, varDD = 0.1)
basePop <- newPop(founderGenomes)

drones <- createDrones(x = basePop[1], nInd = 10)
colony1 <- createColony(queen = basePop[2], fathers = drones[1:5])
colony2 <- createColony(queen = basePop[3], fathers = drones[6:10])
colony1 <- addWorkers(colony1, nInd = 10)
colony2 <- addWorkers(colony2, nInd = 20)
colony1 <- addDrones(colony1, nInd = 2)
colony2 <- addDrones(colony2, nInd = 4)
colony1 <- addVirginQueens(colony1, nInd = 10)

getCasteGv(colony1, caste = "queen")
getQueensGv(colony1)

getCasteGv(colony1, caste = "fathers")
getCasteGv(colony1, caste = "fathers", nInd = 2)
getCasteGv(colony1, caste = "fathers", nInd = 2)
getFathersGv(colony1)
getFathersGv(colony1, nInd = 2)

getCasteGv(colony1, caste = "virginQueens")
getVirginQueensGv(colony1)

getCasteGv(colony1, caste = "workers")
getWorkersGv(colony1)

getCasteGv(colony1, caste = "drones")
getDronesGv(colony1)

apiary <- c(colony1, colony2)
getCasteGv(apiary, caste = "queen")
getQueensGv(apiary)

getCasteGv(apiary, caste = "fathers")
getCasteGv(apiary, caste = "fathers", nInd = 2)
getCasteGv(apiary, caste = "fathers", nInd = 2)
getFathersGv(apiary)
getFathersGv(apiary, nInd = 2)

getCasteGv(apiary, caste = "virginQueens")
getVirginQueensGv(apiary)

getCasteGv(apiary, caste = "workers")
getWorkersGv(apiary)

getCasteGv(apiary, caste = "drones")
getDronesGv(apiary)

}
\seealso{
\code{\link{gv}}
}
